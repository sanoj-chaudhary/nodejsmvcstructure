let Joi,exist,customErrorHandler,connection;_92e‍.x([["default",()=>_92e‍.o]]);_92e‍.w("joi",[["default",["Joi"],function(v){Joi=v}],["exist",["exist"],function(v){exist=v}]]);_92e‍.w("../../services/customErrorHandler",[["default",["customErrorHandler"],function(v){customErrorHandler=v}]]);_92e‍.w("../../lib/db",[["default",["connection"],function(v){connection=v}]]);


const userController = {
    // register method
    register(req,res,next){

        const userSchema = Joi.object({
            name:Joi.string().min(3).max(30).required(),
            email:Joi.string().email(),
            password:Joi.string().min(6).max(10),
            confirm_password: Joi.ref('password'),
        });

        const {error} = userSchema.validate(req.body);
        if(error){
            return next(error);
        }

        res.json({'data' : 'hello from express'});
    },

    // Login function
    login(req,res,next){
      try{
        let query = "SELECT * FROM users where  email = "+ req.body.email+"";
        let items = []
        connection.query(query, (err, result) => {
            if (err) throw err;
            items = result
           
            
        })

        _92e‍.g.console.log(items);
        if(items){
            return next(customErrorHandler.alreadyExist('This is already taken in database'))
    
        }
      }catch(err){
        return next(err);
      }
        
      res.json({data:items});
    }
}


_92e‍.d(userController);